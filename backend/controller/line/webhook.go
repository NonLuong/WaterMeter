// controller/line/webhook.go
package line

import (
	"log"
	"net/http"

	"example.com/sa-67-example/config"
	"github.com/gin-gonic/gin"
	"github.com/line/line-bot-sdk-go/v7/linebot"
)

// WebhookHandler ‡∏£‡∏±‡∏ö Event ‡∏à‡∏≤‡∏Å LINE (POST /line/webhook)
func WebhookHandler(c *gin.Context) {
	// ‡∏™‡∏£‡πâ‡∏≤‡∏á client ‡∏à‡∏≤‡∏Å‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô ENV (‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô main.go ‡∏ú‡πà‡∏≤‡∏ô config.Load())
	bot, err := linebot.New(config.Cfg.LineChannelSecret, config.Cfg.LineChannelAccessToken)
	if err != nil {
		log.Println("[line] bot init error:", err)
		c.Status(http.StatusInternalServerError)
		return
	}

	// ‡∏ï‡∏£‡∏ß‡∏à‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô + ‡πÅ‡∏õ‡∏•‡∏á event
	events, err := bot.ParseRequest(c.Request)
	if err != nil {
		if err == linebot.ErrInvalidSignature {
			log.Println("[line] invalid signature")
			c.Status(http.StatusBadRequest)
			return
		}
		log.Println("[line] parse error:", err)
		c.Status(http.StatusInternalServerError)
		return
	}

	// ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å event
	for _, ev := range events {
		switch ev.Type {

		case linebot.EventTypeFollow:
			// ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡πÅ‡∏≠‡∏î‡∏ö‡∏≠‡∏ó ‚Üí ‡πÄ‡∏Å‡πá‡∏ö userId ‡∏à‡∏≤‡∏Å log (‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏™‡πà .env ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å DB ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á)
			log.Println("[line] FOLLOW userID:", ev.Source.UserID)
			_, _ = bot.ReplyMessage(ev.ReplyToken,
				linebot.NewTextMessage("‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏î‡∏Ñ‡∏£‡∏±‡∏ö ‚úÖ\n‡∏û‡∏¥‡∏°‡∏û‡πå: id ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π userId ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"),
			).Do()

		case linebot.EventTypeMessage:
			switch m := ev.Message.(type) {
			case *linebot.TextMessage:
				userID := ev.Source.UserID
				log.Printf("[line] MSG from %s: %s\n", userID, m.Text)

				// ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏á‡πà‡∏≤‡∏¢ ‡πÜ
				switch m.Text {
				case "id", "Id", "ID":
					_, _ = bot.ReplyMessage(ev.ReplyToken,
						linebot.NewTextMessage("üë§ userId ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠:\n"+userID),
					).Do()

				case "help", "Help":
					_, _ = bot.ReplyMessage(ev.ReplyToken,
						linebot.NewTextMessage("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ:\n‚Ä¢ id ‚Äî ‡πÅ‡∏™‡∏î‡∏á userId ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\n‚Ä¢ help ‚Äî ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠"),
					).Do()

				default:
					// ‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
					_, _ = bot.ReplyMessage(ev.ReplyToken,
						linebot.NewTextMessage("‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö ‚úÖ"),
					).Do()
				}
			}
		}
	}

	// ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö 200 ‡πÄ‡∏™‡∏°‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ LINE ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ success
	c.Status(http.StatusOK)
}
